{"version":3,"sources":["../../../src/presets/material/toggleswitch/index.ts"],"sourcesContent":["import { ToggleSwitchDesignTokens } from '../../../../types/toggleswitch';\n\nexport default {\n    root: {\n        width: '2.75rem',\n        height: '1rem',\n        borderRadius: '30px',\n        gap: '0px',\n        shadow: 'none',\n        focusRing: {\n            width: '0',\n            style: 'none',\n            color: 'unset',\n            offset: '0',\n            shadow: 'none'\n        },\n        borderWidth: '1px',\n        borderColor: 'transparent',\n        hoverBorderColor: 'transparent',\n        checkedBorderColor: 'transparent',\n        checkedHoverBorderColor: 'transparent',\n        invalidBorderColor: '{form.field.invalid.border.color}',\n        transitionDuration: '{form.field.transition.duration}',\n        slideDuration: '0.2s'\n    },\n    handle: {\n        borderRadius: '50%',\n        size: '1.5rem'\n    },\n    colorScheme: {\n        light: {\n            root: {\n                background: '{surface.300}',\n                disabledBackground: '{surface.400}',\n                hoverBackground: '{surface.300}',\n                checkedBackground: '{primary.200}',\n                checkedHoverBackground: '{primary.200}'\n            },\n            handle: {\n                background: '{surface.0}',\n                disabledBackground: '{surface.200}',\n                hoverBackground: '{surface.0}',\n                checkedBackground: '{primary.color}',\n                checkedHoverBackground: '{primary.color}',\n                color: '{text.muted.color}',\n                hoverColor: '{text.color}',\n                checkedColor: '{primary.contrast.color}',\n                checkedHoverColor: '{primary.contrast.color}'\n            }\n        },\n        dark: {\n            root: {\n                background: '{surface.700}',\n                disabledBackground: '{surface.600}',\n                hoverBackground: '{surface.700}',\n                checkedBackground: '{primary.color}',\n                checkedHoverBackground: '{primary.color}'\n            },\n            handle: {\n                background: '{surface.400}',\n                disabledBackground: '{surface.500}',\n                hoverBackground: '{surface.300}',\n                checkedBackground: '{primary.200}',\n                checkedHoverBackground: '{primary.200}',\n                color: '{surface.800}',\n                hoverColor: '{surface.900}',\n                checkedColor: '{primary.contrast.color}',\n                checkedHoverColor: '{primary.contrast.color}'\n            }\n        }\n    },\n    css: ({ dt }) => `\n.p-toggleswitch-handle {\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)\n}\n\n.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover) .p-toggleswitch-handle {\n    box-shadow: 0 0 1px 10px color-mix(in srgb, ${dt('text.color')}, transparent 96%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:focus-visible) .p-toggleswitch-handle {\n    box-shadow: 0 0 1px 10px color-mix(in srgb, ${dt('text.color')}, transparent 88%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover).p-toggleswitch-checked .p-toggleswitch-handle {\n    box-shadow: 0 0 1px 10px color-mix(in srgb, ${dt('toggleswitch.handle.checked.background')}, transparent 92%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:focus-visible).p-toggleswitch-checked .p-toggleswitch-handle {\n    box-shadow: 0 0 1px 10px color-mix(in srgb, ${dt('toggleswitch.handle.checked.background')}, transparent 84%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n`\n} as ToggleSwitchDesignTokens;\n"],"mappings":";AAEA,IAAO,uBAAQ;AAAA,EACX,MAAM;AAAA,IACF,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,WAAW;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,IACb,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,oBAAoB;AAAA,IACpB,yBAAyB;AAAA,IACzB,oBAAoB;AAAA,IACpB,oBAAoB;AAAA,IACpB,eAAe;AAAA,EACnB;AAAA,EACA,QAAQ;AAAA,IACJ,cAAc;AAAA,IACd,MAAM;AAAA,EACV;AAAA,EACA,aAAa;AAAA,IACT,OAAO;AAAA,MACH,MAAM;AAAA,QACF,YAAY;AAAA,QACZ,oBAAoB;AAAA,QACpB,iBAAiB;AAAA,QACjB,mBAAmB;AAAA,QACnB,wBAAwB;AAAA,MAC5B;AAAA,MACA,QAAQ;AAAA,QACJ,YAAY;AAAA,QACZ,oBAAoB;AAAA,QACpB,iBAAiB;AAAA,QACjB,mBAAmB;AAAA,QACnB,wBAAwB;AAAA,QACxB,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,mBAAmB;AAAA,MACvB;AAAA,IACJ;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,QACF,YAAY;AAAA,QACZ,oBAAoB;AAAA,QACpB,iBAAiB;AAAA,QACjB,mBAAmB;AAAA,QACnB,wBAAwB;AAAA,MAC5B;AAAA,MACA,QAAQ;AAAA,QACJ,YAAY;AAAA,QACZ,oBAAoB;AAAA,QACpB,iBAAiB;AAAA,QACjB,mBAAmB;AAAA,QACnB,wBAAwB;AAAA,QACxB,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,mBAAmB;AAAA,MACvB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,KAAK,CAAC,EAAE,GAAG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAM6B,GAAG,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA,kDAIhB,GAAG,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA,kDAIhB,GAAG,wCAAwC,CAAC;AAAA;AAAA;AAAA;AAAA,kDAI5C,GAAG,wCAAwC,CAAC;AAAA;AAAA;AAG9F;","names":[]}